{"ast":null,"code":"var _jsxFileName = \"/home/relic/capstone-two/frontend/src/components/common/FormComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport { FormControl, Stack, Typography, Box } from '@mui/material';\nimport { FormBox, FormTextField, ErrorSpan, PrimaryButton } from '../styled';\nimport ContentContainer from './ContentContainer';\nimport PasswordAdornment from './PasswordAdornment';\nimport useFields from '../../hooks/useFields';\nimport CircularLoading from './CircularLoading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormComponent = ({\n  header,\n  initialState,\n  inputs,\n  submitFunc\n}) => {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  const {\n    navigate\n  } = useContext(UserContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const isLogin = header === 'Login';\n  const inputType = showPassword ? 'text' : 'password';\n  const [formData, handleChange, formErrors, setFormErrors] = useFields(initialState);\n\n  // handle showPassword toggle\n  const handleShowPassword = () => setShowPassword(show => !show);\n\n  // handle form submit\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    // POST request in submitFunc with formData\n    const result = await submitFunc(formData);\n    if (result) {\n      // if errors in POST request\n      setFormErrors(result.err);\n      setIsLoading(false);\n    } else {\n      setIsLoading(false);\n      navigate('/');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    sx: {\n      paddingTop: 10\n    },\n    children: /*#__PURE__*/_jsxDEV(ContentContainer, {\n      alphascale: 0.4,\n      blur: true,\n      children: /*#__PURE__*/_jsxDEV(FormBox, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            color: 'primary.text'\n          },\n          children: header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            height: 24,\n            width: 400,\n            marginBottom: '.4rem'\n          },\n          children: typeof formErrors[0] === 'string' ? /*#__PURE__*/_jsxDEV(ErrorSpan, {\n            children: formErrors[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: [inputs.map((name, idx) => {\n            const firstLetter = name[0].toUpperCase();\n            const label = firstLetter.concat(name.slice(1));\n            const isPassword = name === 'password';\n            return /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(FormTextField, {\n                variant: \"outlined\",\n                label: label,\n                type: isPassword ? inputType : 'text',\n                name: name,\n                value: formData[name],\n                onChange: handleChange,\n                autoFocus: idx === 0,\n                autoComplete: isPassword ? 'current-password' : '',\n                InputProps: {\n                  endAdornment: isPassword ? /*#__PURE__*/_jsxDEV(PasswordAdornment, {\n                    showPassword: showPassword,\n                    handleShowPassword: handleShowPassword\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 49\n                  }, this) : null\n                },\n                helperText: formErrors.length && !isLogin ? /*#__PURE__*/_jsxDEV(ErrorSpan, {\n                  children: formErrors[0][name]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 49\n                }, this) : null,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this)\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this);\n          }), isLogin ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 56,\n              display: 'flex'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                textAlign: 'center',\n                color: 'primary.text',\n                margin: 'auto'\n              },\n              children: [\"Don't have an account yet? Sign up\", /*#__PURE__*/_jsxDEV(Link, {\n                to: '/signup',\n                children: \" here.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this) : null, /*#__PURE__*/_jsxDEV(PrimaryButton, {\n            variant: \"contained\",\n            type: \"submit\",\n            className: \"main-button\",\n            children: [\"Submit\", isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                position: 'absolute',\n                right: 20\n              },\n              children: /*#__PURE__*/_jsxDEV(CircularLoading, {\n                size: \"1.3rem\",\n                color: \"primary.dark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(FormComponent, \"UTeLMNnNrQM9GRdeVRbpkEAbD1U=\", false, function () {\n  return [useFields];\n});\n_c = FormComponent;\nexport default FormComponent;\nvar _c;\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"names":["React","useState","useContext","Link","UserContext","FormControl","Stack","Typography","Box","FormBox","FormTextField","ErrorSpan","PrimaryButton","ContentContainer","PasswordAdornment","useFields","CircularLoading","jsxDEV","_jsxDEV","FormComponent","header","initialState","inputs","submitFunc","_s","showPassword","setShowPassword","navigate","isLoading","setIsLoading","isLogin","inputType","formData","handleChange","formErrors","setFormErrors","handleShowPassword","show","handleSubmit","e","preventDefault","result","err","sx","paddingTop","children","alphascale","blur","component","onSubmit","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","height","width","marginBottom","spacing","map","name","idx","firstLetter","toUpperCase","label","concat","slice","isPassword","type","value","onChange","autoFocus","autoComplete","InputProps","endAdornment","helperText","length","required","display","textAlign","margin","to","className","position","right","size","_c","$RefreshReg$"],"sources":["/home/relic/capstone-two/frontend/src/components/common/FormComponent.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport { FormControl, Stack, Typography, Box } from '@mui/material';\nimport { FormBox, FormTextField, ErrorSpan, PrimaryButton } from '../styled';\nimport ContentContainer from './ContentContainer';\nimport PasswordAdornment from './PasswordAdornment';\nimport useFields from '../../hooks/useFields';\nimport CircularLoading from './CircularLoading';\n\nconst FormComponent = ({\n    header,\n    initialState,\n    inputs,\n    submitFunc,\n}) => {\n    const [showPassword, setShowPassword] = useState(false);\n    const { navigate } = useContext(UserContext);\n    const [isLoading, setIsLoading] = useState(false);\n    const isLogin = header === 'Login';\n\n    const inputType = showPassword ? 'text' : 'password';\n\n    const [formData, handleChange, formErrors, setFormErrors] =\n        useFields(initialState);\n\n    // handle showPassword toggle\n    const handleShowPassword = () => setShowPassword((show) => !show);\n\n    // handle form submit\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setIsLoading(true);\n        // POST request in submitFunc with formData\n        const result = await submitFunc(formData);\n        if (result) {\n            // if errors in POST request\n            setFormErrors(result.err);\n            setIsLoading(false);\n        } else {\n            setIsLoading(false);\n            navigate('/');\n        }\n    };\n\n    return (\n        <Stack sx={{ paddingTop: 10 }}>\n            <ContentContainer\n                alphascale={0.4}\n                blur\n            >\n                <FormBox\n                    component='form'\n                    onSubmit={handleSubmit}\n                >\n                    <Typography\n                        variant='h5'\n                        sx={{ color: 'primary.text' }}\n                    >\n                        {header}\n                    </Typography>\n\n                    <Box sx={{ height: 24, width: 400, marginBottom: '.4rem' }}>\n                        {typeof formErrors[0] === 'string' ? (\n                            <ErrorSpan>{formErrors[0]}</ErrorSpan>\n                        ) : null}\n                    </Box>\n\n                    <Stack spacing={3}>\n                        {inputs.map((name, idx) => {\n                            const firstLetter = name[0].toUpperCase();\n                            const label = firstLetter.concat(name.slice(1));\n                            const isPassword = name === 'password';\n\n                            return (\n                                <FormControl key={name}>\n                                    <FormTextField\n                                        variant='outlined'\n                                        label={label}\n                                        type={isPassword ? inputType : 'text'}\n                                        name={name}\n                                        value={formData[name]}\n                                        onChange={handleChange}\n                                        autoFocus={idx === 0}\n                                        autoComplete={isPassword ? 'current-password' : ''}\n                                        InputProps={{\n                                            endAdornment: isPassword ? (\n                                                <PasswordAdornment\n                                                    showPassword={showPassword}\n                                                    handleShowPassword={handleShowPassword}\n                                                />\n                                            ) : null,\n                                        }}\n                                        helperText={\n                                            formErrors.length && !isLogin ? (\n                                                <ErrorSpan>{formErrors[0][name]}</ErrorSpan>\n                                            ) : null\n                                        }\n                                        required\n                                    />\n                                </FormControl>\n                            );\n                        })}\n\n                        {isLogin ? (\n                            <Box sx={{ height: 56, display: 'flex' }}>\n                                <Typography\n                                    sx={{\n                                        textAlign: 'center',\n                                        color: 'primary.text',\n                                        margin: 'auto',\n                                    }}\n                                >\n                                    Don't have an account yet? Sign up\n                                    <Link to={'/signup'}> here.</Link>\n                                </Typography>\n                            </Box>\n                        ) : null}\n\n                        <PrimaryButton\n                            variant='contained'\n                            type='submit'\n                            className='main-button'\n                        >\n                            Submit\n                            {isLoading ? (\n                                <Box\n                                    sx={{\n                                        position: 'absolute',\n                                        right: 20,\n                                    }}\n                                >\n                                    <CircularLoading\n                                        size='1.3rem'\n                                        color='primary.dark'\n                                    />\n                                </Box>\n                            ) : null}\n                        </PrimaryButton>\n                    </Stack>\n                </FormBox>\n            </ContentContainer>\n        </Stack>\n    );\n}\n\nexport default FormComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,WAAW,EAAEC,KAAK,EAAEC,UAAU,EAAEC,GAAG,QAAQ,eAAe;AACnE,SAASC,OAAO,EAAEC,aAAa,EAAEC,SAAS,EAAEC,aAAa,QAAQ,WAAW;AAC5E,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAa,GAAGA,CAAC;EACnBC,MAAM;EACNC,YAAY;EACZC,MAAM;EACNC;AACJ,CAAC,KAAK;EAAAC,EAAA;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM;IAAE0B;EAAS,CAAC,GAAGzB,UAAU,CAACE,WAAW,CAAC;EAC5C,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM6B,OAAO,GAAGV,MAAM,KAAK,OAAO;EAElC,MAAMW,SAAS,GAAGN,YAAY,GAAG,MAAM,GAAG,UAAU;EAEpD,MAAM,CAACO,QAAQ,EAAEC,YAAY,EAAEC,UAAU,EAAEC,aAAa,CAAC,GACrDpB,SAAS,CAACM,YAAY,CAAC;;EAE3B;EACA,MAAMe,kBAAkB,GAAGA,CAAA,KAAMV,eAAe,CAAEW,IAAI,IAAK,CAACA,IAAI,CAAC;;EAEjE;EACA,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBX,YAAY,CAAC,IAAI,CAAC;IAClB;IACA,MAAMY,MAAM,GAAG,MAAMlB,UAAU,CAACS,QAAQ,CAAC;IACzC,IAAIS,MAAM,EAAE;MACR;MACAN,aAAa,CAACM,MAAM,CAACC,GAAG,CAAC;MACzBb,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,MAAM;MACHA,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAAC,GAAG,CAAC;IACjB;EACJ,CAAC;EAED,oBACIT,OAAA,CAACZ,KAAK;IAACqC,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAG,CAAE;IAAAC,QAAA,eAC1B3B,OAAA,CAACL,gBAAgB;MACbiC,UAAU,EAAE,GAAI;MAChBC,IAAI;MAAAF,QAAA,eAEJ3B,OAAA,CAACT,OAAO;QACJuC,SAAS,EAAC,MAAM;QAChBC,QAAQ,EAAEX,YAAa;QAAAO,QAAA,gBAEvB3B,OAAA,CAACX,UAAU;UACP2C,OAAO,EAAC,IAAI;UACZP,EAAE,EAAE;YAAEQ,KAAK,EAAE;UAAe,CAAE;UAAAN,QAAA,EAE7BzB;QAAM;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEbrC,OAAA,CAACV,GAAG;UAACmC,EAAE,EAAE;YAAEa,MAAM,EAAE,EAAE;YAAEC,KAAK,EAAE,GAAG;YAAEC,YAAY,EAAE;UAAQ,CAAE;UAAAb,QAAA,EACtD,OAAOX,UAAU,CAAC,CAAC,CAAC,KAAK,QAAQ,gBAC9BhB,OAAA,CAACP,SAAS;YAAAkC,QAAA,EAAEX,UAAU,CAAC,CAAC;UAAC;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,GACtC;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eAENrC,OAAA,CAACZ,KAAK;UAACqD,OAAO,EAAE,CAAE;UAAAd,QAAA,GACbvB,MAAM,CAACsC,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;YACvB,MAAMC,WAAW,GAAGF,IAAI,CAAC,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;YACzC,MAAMC,KAAK,GAAGF,WAAW,CAACG,MAAM,CAACL,IAAI,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/C,MAAMC,UAAU,GAAGP,IAAI,KAAK,UAAU;YAEtC,oBACI3C,OAAA,CAACb,WAAW;cAAAwC,QAAA,eACR3B,OAAA,CAACR,aAAa;gBACVwC,OAAO,EAAC,UAAU;gBAClBe,KAAK,EAAEA,KAAM;gBACbI,IAAI,EAAED,UAAU,GAAGrC,SAAS,GAAG,MAAO;gBACtC8B,IAAI,EAAEA,IAAK;gBACXS,KAAK,EAAEtC,QAAQ,CAAC6B,IAAI,CAAE;gBACtBU,QAAQ,EAAEtC,YAAa;gBACvBuC,SAAS,EAAEV,GAAG,KAAK,CAAE;gBACrBW,YAAY,EAAEL,UAAU,GAAG,kBAAkB,GAAG,EAAG;gBACnDM,UAAU,EAAE;kBACRC,YAAY,EAAEP,UAAU,gBACpBlD,OAAA,CAACJ,iBAAiB;oBACdW,YAAY,EAAEA,YAAa;oBAC3BW,kBAAkB,EAAEA;kBAAmB;oBAAAgB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC1C,CAAC,GACF;gBACR,CAAE;gBACFqB,UAAU,EACN1C,UAAU,CAAC2C,MAAM,IAAI,CAAC/C,OAAO,gBACzBZ,OAAA,CAACP,SAAS;kBAAAkC,QAAA,EAAEX,UAAU,CAAC,CAAC,CAAC,CAAC2B,IAAI;gBAAC;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,GAC5C,IACP;gBACDuB,QAAQ;cAAA;gBAAA1B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX;YAAC,GAxBYM,IAAI;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAyBT,CAAC;UAEtB,CAAC,CAAC,EAEDzB,OAAO,gBACJZ,OAAA,CAACV,GAAG;YAACmC,EAAE,EAAE;cAAEa,MAAM,EAAE,EAAE;cAAEuB,OAAO,EAAE;YAAO,CAAE;YAAAlC,QAAA,eACrC3B,OAAA,CAACX,UAAU;cACPoC,EAAE,EAAE;gBACAqC,SAAS,EAAE,QAAQ;gBACnB7B,KAAK,EAAE,cAAc;gBACrB8B,MAAM,EAAE;cACZ,CAAE;cAAApC,QAAA,GACL,oCAEG,eAAA3B,OAAA,CAACf,IAAI;gBAAC+E,EAAE,EAAE,SAAU;gBAAArC,QAAA,EAAC;cAAM;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,GACN,IAAI,eAERrC,OAAA,CAACN,aAAa;YACVsC,OAAO,EAAC,WAAW;YACnBmB,IAAI,EAAC,QAAQ;YACbc,SAAS,EAAC,aAAa;YAAAtC,QAAA,GAC1B,QAEG,EAACjB,SAAS,gBACNV,OAAA,CAACV,GAAG;cACAmC,EAAE,EAAE;gBACAyC,QAAQ,EAAE,UAAU;gBACpBC,KAAK,EAAE;cACX,CAAE;cAAAxC,QAAA,eAEF3B,OAAA,CAACF,eAAe;gBACZsE,IAAI,EAAC,QAAQ;gBACbnC,KAAK,EAAC;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,GACN,IAAI;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEhB,CAAC;AAAA/B,EAAA,CAtIKL,aAAa;EAAA,QAcXJ,SAAS;AAAA;AAAAwE,EAAA,GAdXpE,aAAa;AAwInB,eAAeA,aAAa;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}