{"ast":null,"code":"var _jsxFileName = \"/home/relic/capstone-two/frontend/src/components/account/EditProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Stack, FormControl, Box } from '@mui/material';\nimport { FormTextField, PrimaryButton, CancelButton, ErrorSpan } from '../styled';\nimport useFields from '../../hooks/useFields';\nimport UserContext from '../../context/UserContext';\nimport EditAvatar from './EditAvatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditProfile({\n  open,\n  setOpen,\n  username\n}) {\n  _s();\n  const {\n    updateUser,\n    userData\n  } = useContext(UserContext);\n  const [formData, handleChange, formErrors, setFormErrors, setFormData] = useFields(userData);\n\n  // handle closing of dialog box\n  const handleClose = () => {\n    setFormErrors([]);\n    setFormData(userData);\n    setOpen(false);\n  };\n\n  // handle file uploading of imageURL\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setFormData({\n        ...formData,\n        imageURL: reader.result\n      });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  /** Check for changes in edit form\n   *\n   * @param {*} formData { username, email, imageURL }\n   * @param {*} userData { username, email, imageURL }\n   * @returns {*} { username: 'newUser' }\n   *\n   * maps entries of formData and compare values\n   *  against userData values\n   *\n   * if no changes, return -1\n   *\n   * example --\n   *\n   * userData = { username: 'testUser', email: 'me@me.com', imageURL: 'someImageURL' }\n   *\n   * formData = { username: 'newUser', email: 'me@me.com', imageURL: 'someImageURL' }\n   */\n  const getChanges = (formData, userData) => {\n    const formEntries = Object.entries(formData);\n    const initialEntries = Object.entries(userData);\n    const updateData = {};\n    const entries = formEntries.filter(([key, val], idx) => val !== initialEntries[idx][1]);\n    if (!entries.length) return -1;\n    entries.map(entry => updateData[entry[0]] = entry[1]);\n    return updateData;\n  };\n\n  // handle form submit\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // check for any changes\n    const updateData = getChanges(formData, userData);\n    if (updateData === -1) return handleClose();\n\n    // Patch request with updated data\n    const result = await updateUser(updateData, username);\n    if (result) {\n      setFormErrors(result.msg);\n    } else {\n      handleClose();\n    }\n  };\n  useEffect(() => {\n    setFormData(userData);\n  }, [userData, setFormData]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    sx: {\n      '& .MuiPaper-root': {\n        bottom: '5rem',\n        bgcolor: 'lightgrey',\n        width: 600,\n        padding: '0rem 4rem 1rem 4rem'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      fontSize: '1.5rem',\n      sx: {\n        color: 'primary.text',\n        paddingBottom: 0\n      },\n      children: \"Edit Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: 24,\n          width: 400,\n          marginBottom: '.4rem'\n        },\n        children: typeof formErrors[0] === 'string' ? /*#__PURE__*/_jsxDEV(ErrorSpan, {\n          children: formErrors[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(EditAvatar, {\n          imageURL: formData.imageURL,\n          handleFileUpload: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), ['username', 'email'].map(name => {\n          const firstLetter = name[0].toUpperCase();\n          const label = firstLetter.concat(name.slice(1));\n          return /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(FormTextField, {\n              variant: \"outlined\",\n              label: label,\n              type: 'text',\n              name: name,\n              value: formData[name],\n              onChange: handleChange,\n              helperText: formErrors.length && typeof formErrors[0] !== 'string' ? /*#__PURE__*/_jsxDEV(ErrorSpan, {\n                children: formErrors[0][name]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 45\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this)\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      sx: {\n        marginRight: 'auto',\n        padding: '5px 0px 0px 24px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CancelButton, {\n        variant: \"outlined\",\n        onClick: handleClose,\n        className: \"main-button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        variant: \"contained\",\n        onClick: handleSubmit,\n        className: \"main-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_s(EditProfile, \"+wFDRB2kInDGdbsyBhZjWyvWaqo=\", false, function () {\n  return [useFields];\n});\n_c = EditProfile;\nvar _c;\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"names":["React","useContext","useEffect","Dialog","DialogTitle","DialogContent","DialogActions","Stack","FormControl","Box","FormTextField","PrimaryButton","CancelButton","ErrorSpan","useFields","UserContext","EditAvatar","jsxDEV","_jsxDEV","EditProfile","open","setOpen","username","_s","updateUser","userData","formData","handleChange","formErrors","setFormErrors","setFormData","handleClose","handleFileUpload","event","file","target","files","reader","FileReader","onloadend","imageURL","result","readAsDataURL","getChanges","formEntries","Object","entries","initialEntries","updateData","filter","key","val","idx","length","map","entry","handleSubmit","e","preventDefault","msg","onClose","sx","bottom","bgcolor","width","padding","children","fontSize","color","paddingBottom","fileName","_jsxFileName","lineNumber","columnNumber","height","marginBottom","spacing","name","firstLetter","toUpperCase","label","concat","slice","variant","type","value","onChange","helperText","marginRight","onClick","className","_c","$RefreshReg$"],"sources":["/home/relic/capstone-two/frontend/src/components/account/EditProfile.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Stack,\n    FormControl,\n    Box,\n} from '@mui/material';\nimport {\n    FormTextField,\n    PrimaryButton,\n    CancelButton,\n    ErrorSpan,\n} from '../styled';\nimport useFields from '../../hooks/useFields';\nimport UserContext from '../../context/UserContext';\nimport EditAvatar from './EditAvatar';\n\nexport default function EditProfile({ open, setOpen, username }) {\n    const { updateUser, userData } = useContext(UserContext);\n\n    const [formData, handleChange, formErrors, setFormErrors, setFormData] =\n        useFields(userData);\n\n    // handle closing of dialog box\n    const handleClose = () => {\n        setFormErrors([]);\n        setFormData(userData);\n        setOpen(false);\n    };\n\n    // handle file uploading of imageURL\n    const handleFileUpload = (event) => {\n        const file = event.target.files[0];\n        const reader = new FileReader();\n\n        reader.onloadend = () => {\n            setFormData({ ...formData, imageURL: reader.result });\n        };\n\n        reader.readAsDataURL(file);\n    };\n\n    /** Check for changes in edit form\n     *\n     * @param {*} formData { username, email, imageURL }\n     * @param {*} userData { username, email, imageURL }\n     * @returns {*} { username: 'newUser' }\n     *\n     * maps entries of formData and compare values\n     *  against userData values\n     *\n     * if no changes, return -1\n     *\n     * example --\n     *\n     * userData = { username: 'testUser', email: 'me@me.com', imageURL: 'someImageURL' }\n     *\n     * formData = { username: 'newUser', email: 'me@me.com', imageURL: 'someImageURL' }\n     */\n    const getChanges = (formData, userData) => {\n        const formEntries = Object.entries(formData);\n        const initialEntries = Object.entries(userData);\n        const updateData = {};\n\n        const entries = formEntries.filter(\n            ([key, val], idx) => val !== initialEntries[idx][1]\n        );\n\n        if (!entries.length) return -1;\n\n        entries.map((entry) => (updateData[entry[0]] = entry[1]));\n\n        return updateData;\n    };\n\n    // handle form submit\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // check for any changes\n        const updateData = getChanges(formData, userData);\n\n        if (updateData === -1) return handleClose();\n\n        // Patch request with updated data\n        const result = await updateUser(updateData, username);\n\n        if (result) {\n            setFormErrors(result.msg);\n        } else {\n            handleClose();\n        }\n    };\n\n    useEffect(() => {\n        setFormData(userData);\n    }, [userData, setFormData]);\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            sx={{\n                '& .MuiPaper-root': {\n                    bottom: '5rem',\n                    bgcolor: 'lightgrey',\n                    width: 600,\n                    padding: '0rem 4rem 1rem 4rem',\n                },\n            }}\n        >\n            <DialogTitle\n                fontSize={'1.5rem'}\n                sx={{ color: 'primary.text', paddingBottom: 0 }}\n            >\n                Edit Profile\n            </DialogTitle>\n            <DialogContent>\n                <Box sx={{ height: 24, width: 400, marginBottom: '.4rem' }}>\n                    {typeof formErrors[0] === 'string' ? (\n                        <ErrorSpan>{formErrors[0]}</ErrorSpan>\n                    ) : null}\n                </Box>\n                <Stack spacing={3}>\n                    <EditAvatar\n                        imageURL={formData.imageURL}\n                        handleFileUpload={handleFileUpload}\n                    />\n                    {['username', 'email'].map((name) => {\n                        const firstLetter = name[0].toUpperCase();\n                        const label = firstLetter.concat(name.slice(1));\n\n                        return (\n                            <FormControl key={name}>\n                                <FormTextField\n                                    variant='outlined'\n                                    label={label}\n                                    type={'text'}\n                                    name={name}\n                                    value={formData[name]}\n                                    onChange={handleChange}\n                                    helperText={\n                                        formErrors.length && typeof formErrors[0] !== 'string' ? (\n                                            <ErrorSpan>{formErrors[0][name]}</ErrorSpan>\n                                        ) : null\n                                    }\n                                />\n                            </FormControl>\n                        );\n                    })}\n                </Stack>\n            </DialogContent>\n            <DialogActions sx={{ marginRight: 'auto', padding: '5px 0px 0px 24px' }}>\n                <CancelButton\n                    variant='outlined'\n                    onClick={handleClose}\n                    className='main-button'\n                >\n                    Cancel\n                </CancelButton>\n                <PrimaryButton\n                    variant='contained'\n                    onClick={handleSubmit}\n                    className='main-button'\n                >\n                    Submit\n                </PrimaryButton>\n            </DialogActions>\n        </Dialog>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}