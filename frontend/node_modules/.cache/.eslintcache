[{"/home/relic/capstone-two/frontend/src/index.js":"1","/home/relic/capstone-two/frontend/src/App.js":"2","/home/relic/capstone-two/frontend/src/components/navbar/NavBar.js":"3","/home/relic/capstone-two/frontend/src/components/routes/AllRoutes.js":"4","/home/relic/capstone-two/frontend/src/components/Home.js":"5","/home/relic/capstone-two/frontend/src/components/account/SignUpForm.js":"6","/home/relic/capstone-two/frontend/src/components/account/LoginForm.js":"7","/home/relic/capstone-two/frontend/src/components/account/Profile.js":"8","/home/relic/capstone-two/frontend/src/components/account/ProfileSkeleton.js":"9","/home/relic/capstone-two/frontend/src/context/UserContext.js":"10","/home/relic/capstone-two/frontend/src/components/account/EditProfile.js":"11","/home/relic/capstone-two/frontend/src/components/common/FormComponent.js":"12","/home/relic/capstone-two/frontend/src/components/styled.js":"13","/home/relic/capstone-two/frontend/src/components/account/EditAvatar.js":"14","/home/relic/capstone-two/frontend/src/hooks/useFields.js":"15","/home/relic/capstone-two/frontend/src/components/common/BaseSkeleton.js":"16","/home/relic/capstone-two/frontend/src/components/common/ContentContainer.js":"17","/home/relic/capstone-two/frontend/src/components/common/PasswordAdornment.js":"18","/home/relic/capstone-two/frontend/src/components/common/CircularLoading.js":"19","/home/relic/capstone-two/frontend/src/components/NotFound.js":"20","/home/relic/capstone-two/frontend/src/components/search/SearchResultsPage.js":"21","/home/relic/capstone-two/frontend/src/api.js":"22","/home/relic/capstone-two/frontend/src/hooks/useLocalStorage.js":"23","/home/relic/capstone-two/frontend/src/components/common/LoadingSpinner.js":"24","/home/relic/capstone-two/frontend/src/components/SpellBook.js":"25","/home/relic/capstone-two/frontend/src/components/SpellCard.js":"26","/home/relic/capstone-two/frontend/src/components/ThirdPartyApi.js":"27","/home/relic/capstone-two/frontend/src/components/navbar/AnonUserLinks.js":"28","/home/relic/capstone-two/frontend/src/components/navbar/UserAccountMenu.js":"29","/home/relic/capstone-two/frontend/src/context/UserContextProvider.js":"30"},{"size":467,"mtime":1696372214395,"results":"31","hashOfConfig":"32"},{"size":520,"mtime":1701211553539,"results":"33","hashOfConfig":"32"},{"size":952,"mtime":1701232784089,"results":"34","hashOfConfig":"32"},{"size":1088,"mtime":1696468989032,"results":"35","hashOfConfig":"32"},{"size":1037,"mtime":1701230158019,"results":"36","hashOfConfig":"32"},{"size":453,"mtime":1696282607590,"results":"37","hashOfConfig":"32"},{"size":431,"mtime":1699498463122,"results":"38","hashOfConfig":"32"},{"size":3969,"mtime":1701234504099,"results":"39","hashOfConfig":"32"},{"size":566,"mtime":1696283205800,"results":"40","hashOfConfig":"32"},{"size":71,"mtime":1701206552620,"results":"41","hashOfConfig":"32"},{"size":5776,"mtime":1701235946719,"results":"42","hashOfConfig":"32"},{"size":6037,"mtime":1699498933752,"results":"43","hashOfConfig":"32"},{"size":1768,"mtime":1696470953612,"results":"44","hashOfConfig":"32"},{"size":1752,"mtime":1696469778792,"results":"45","hashOfConfig":"32"},{"size":620,"mtime":1696282257640,"results":"46","hashOfConfig":"32"},{"size":645,"mtime":1696470375612,"results":"47","hashOfConfig":"32"},{"size":1610,"mtime":1696471003642,"results":"48","hashOfConfig":"32"},{"size":775,"mtime":1696470786402,"results":"49","hashOfConfig":"32"},{"size":494,"mtime":1696288576640,"results":"50","hashOfConfig":"32"},{"size":530,"mtime":1696470929962,"results":"51","hashOfConfig":"32"},{"size":0,"mtime":1696288961520,"results":"52","hashOfConfig":"32"},{"size":2682,"mtime":1701302927798,"results":"53","hashOfConfig":"32"},{"size":716,"mtime":1699496908512,"results":"54","hashOfConfig":"32"},{"size":177,"mtime":1696468477352,"results":"55","hashOfConfig":"32"},{"size":890,"mtime":1701228159269,"results":"56","hashOfConfig":"32"},{"size":2670,"mtime":1701303137158,"results":"57","hashOfConfig":"32"},{"size":893,"mtime":1700329308664,"results":"58","hashOfConfig":"32"},{"size":1385,"mtime":1700521189254,"results":"59","hashOfConfig":"32"},{"size":2833,"mtime":1700529893324,"results":"60","hashOfConfig":"32"},{"size":6512,"mtime":1701303309278,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lacf51",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},"/home/relic/capstone-two/frontend/src/index.js",[],[],"/home/relic/capstone-two/frontend/src/App.js",[],[],"/home/relic/capstone-two/frontend/src/components/navbar/NavBar.js",["153","154"],[],"/home/relic/capstone-two/frontend/src/components/routes/AllRoutes.js",[],[],"/home/relic/capstone-two/frontend/src/components/Home.js",[],[],"/home/relic/capstone-two/frontend/src/components/account/SignUpForm.js",[],[],"/home/relic/capstone-two/frontend/src/components/account/LoginForm.js",[],[],"/home/relic/capstone-two/frontend/src/components/account/Profile.js",["155"],["156"],"/home/relic/capstone-two/frontend/src/components/account/ProfileSkeleton.js",[],[],"/home/relic/capstone-two/frontend/src/context/UserContext.js",[],[],"/home/relic/capstone-two/frontend/src/components/account/EditProfile.js",[],[],"/home/relic/capstone-two/frontend/src/components/common/FormComponent.js",[],[],"/home/relic/capstone-two/frontend/src/components/styled.js",["157"],[],"/home/relic/capstone-two/frontend/src/components/account/EditAvatar.js",[],[],"/home/relic/capstone-two/frontend/src/hooks/useFields.js",[],[],"/home/relic/capstone-two/frontend/src/components/common/BaseSkeleton.js",[],[],"/home/relic/capstone-two/frontend/src/components/common/ContentContainer.js",[],[],"/home/relic/capstone-two/frontend/src/components/common/PasswordAdornment.js",[],[],"/home/relic/capstone-two/frontend/src/components/common/CircularLoading.js",[],[],"/home/relic/capstone-two/frontend/src/components/NotFound.js",[],[],"/home/relic/capstone-two/frontend/src/components/search/SearchResultsPage.js",[],[],"/home/relic/capstone-two/frontend/src/api.js",[],[],"/home/relic/capstone-two/frontend/src/hooks/useLocalStorage.js",[],[],"/home/relic/capstone-two/frontend/src/components/common/LoadingSpinner.js",[],[],"/home/relic/capstone-two/frontend/src/components/SpellBook.js",[],[],"/home/relic/capstone-two/frontend/src/components/SpellCard.js",[],[],"/home/relic/capstone-two/frontend/src/components/ThirdPartyApi.js",[],[],"/home/relic/capstone-two/frontend/src/components/navbar/AnonUserLinks.js",[],[],"/home/relic/capstone-two/frontend/src/components/navbar/UserAccountMenu.js",[],[],"/home/relic/capstone-two/frontend/src/context/UserContextProvider.js",["158"],[],"import React, { useState, useEffect, useCallback } from \"react\";\nimport UserContext from \"./UserContext\";\nimport { useNavigate } from \"react-router\"\nimport DnDApi from '../api'\nimport useLocalStorage from '../hooks/useLocalStorage'\nimport jwt_decode from \"jwt-decode\"\nimport LoadingSpinner from '../components/common/LoadingSpinner'\n\nexport const TOKEN_STORAGE_ID = \"dnd-token\";\n\nfunction UserContextProvider({ children }) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [currentUser, setCurrentUser] = useState('');\n    const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n    const [userData, setUserData] = useState('');\n    const [userFavIds, setUserFavIds] = useState(new Set());\n    const [favorites, setFavorites] = useState('');\n\n    const navigate = useNavigate();\n\n    const saveToken = useCallback(() => {\n        DnDApi.token = token;\n        const { username } = jwt_decode(token);\n        setCurrentUser(username);\n    }, [token, setCurrentUser]);\n\n    useEffect(() => {\n        if (token) saveToken();\n        setIsLoading(false);\n    }, [token, saveToken]);\n\n    async function registerUser(signUpData) {\n        try {\n            let token = await DnDApi.register(signUpData)\n            setToken(token)\n            return { success: true }\n        } catch (err) {\n            console.error('signup failed', err)\n            return { success: false, err }\n        }\n    }\n\n    async function loginUser(loginData) {\n        try {\n            let token = await DnDApi.login(loginData)\n            setToken(token)\n        } catch (err) {\n            return { err }\n        }\n    }\n\n    async function updateUser(formData, username) {\n        try {\n            const result = await DnDApi.updateUser(formData, username);\n            const user = result.user;\n            if (result.token) {\n                setToken(result.token);\n                navigate(`/profile/${username}`);\n            }\n            setUserData({ ...user });\n        } catch (err) {\n            return { msg: err };\n        }\n    }\n\n\n    async function getCurrentUser(username) {\n        try {\n            const user = await DnDApi.getCurrentUser(username);\n            setUserData(user);\n        } catch (err) {\n            console.error('Error: ', err);\n            if (err[0] === 'Unauthorized') {\n                return logout();\n            }\n        }\n    }\n    async function deleteUser() {\n        try {\n            const result = await DnDApi.deleteUser(currentUser);\n            return result;\n        } catch (err) {\n            console.error('Error: ', err);\n        }\n    }\n\n    const logout = () => {\n        setCurrentUser('')\n        setToken('')\n        navigate('/')\n    }\n\n    // GET favorite ids for currentUser\n    const getFavIds = useCallback(async () => {\n        try {\n            const results = await DnDApi.getFavorites(currentUser);\n            setUserFavIds(new Set(results.favorites));\n        } catch (err) {\n            console.error('Error: ', err);\n        }\n    }, [currentUser, setUserFavIds]);\n\n    useEffect(() => {\n        if (currentUser) getFavIds();\n    }, [currentUser, getFavIds]);\n\n    /** Get spell data for each spell in favorites\n     *\n     * formats userFavIds to string\n     */\n    const getFavorites = useCallback(async () => {\n        try {\n            if (!favorites) {\n                if (userFavIds.size) {\n                    const ress = localStorage.getItem(\"spells\");\n                    const res = JSON.parse(ress)\n                    const results = res.filter((s) => {\n                        if (userFavIds.has(s.index)) {\n                            return s\n                        }\n                    })\n                    setFavorites(Array.isArray(results) ? results : [results]);\n                } else {\n                    setFavorites([]);\n                }\n            }\n        } catch (err) {\n            console.error('Error: ', err);\n        }\n    }, [favorites, setFavorites, userFavIds]);\n\n    /** Add spell to currentUser favorites\n     *\n     * @param {*} spell\n     *\n     * will get favorites if not set\n     *\n     * then update favorites, userFavIds, and colValue\n     *  with added spell\n     */\n    async function addFavorite(spell) {\n        try {\n            setIsLoading(true);\n            const favId = spell.index;\n            // POST request to server\n            await DnDApi.addFavorite(currentUser, favId);\n            // if favorites is not set yet, call getFavorites\n            if (!favorites) {\n                await getFavorites();\n            }\n            setFavorites((prev) => [...prev, spell]);\n            setUserFavIds((prev) => new Set(prev).add(favId));\n            setIsLoading(false);\n        } catch (err) {\n            console.error('Error: ', err);\n        }\n    }\n\n    /** Remove spell from currentUser favorites\n     *\n     * @param {*} spell\n     *\n     * then update favorites, userFavIds, and colValue\n     *  with removed spell\n     */\n    async function removeFavorite(spell) {\n        try {\n            const favId = spell.index;\n            if (currentUser) {\n                await DnDApi.RemoveFavorite(currentUser, favId);\n                setFavorites((prev) => prev.filter((s) => s.index !== favId));\n                setUserFavIds((prev) => {\n                    const next = new Set(prev);\n                    next.delete(favId);\n                    return next;\n                });\n            }\n        } catch (err) {\n            console.error('Error: ', err);\n        }\n    }\n\n    const onHomepage = window.location.pathname === '/'\n\n    if (isLoading && !onHomepage) return <LoadingSpinner />\n\n    return (\n        <UserContext.Provider\n            value={\n                {\n                    isLoading,\n                    token,\n                    currentUser,\n                    getCurrentUser,\n                    userData,\n                    registerUser,\n                    loginUser,\n                    updateUser,\n                    logout,\n                    navigate,\n                    deleteUser,\n                    getFavorites,\n                    getFavIds,\n                    addFavorite,\n                    removeFavorite,\n                    setCurrentUser,\n                    setIsLoading,\n                    setUserFavIds,\n                    favorites,\n                    userFavIds,\n                }\n            }\n        >\n            {children}\n        </UserContext.Provider>\n    )\n}\nexport default UserContextProvider",{"ruleId":"159","severity":1,"message":"160","line":1,"column":29,"nodeType":"161","messageId":"162","endLine":1,"endColumn":37},{"ruleId":"159","severity":1,"message":"163","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":14},{"ruleId":"164","severity":1,"message":"165","line":38,"column":8,"nodeType":"166","endLine":38,"endColumn":10,"suggestions":"167"},{"ruleId":"164","severity":1,"message":"168","line":34,"column":8,"nodeType":"166","endLine":34,"endColumn":37,"suggestions":"169","suppressions":"170"},{"ruleId":"159","severity":1,"message":"171","line":4,"column":5,"nodeType":"161","messageId":"162","endLine":4,"endColumn":10},{"ruleId":"172","severity":1,"message":"173","line":117,"column":52,"nodeType":"174","messageId":"175","endLine":117,"endColumn":54},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser' and 'getFavorites'. Either include them or remove the dependency array.","ArrayExpression",["176"],"React Hook useEffect has missing dependencies: 'userData' and 'username'. Either include them or remove the dependency array.",["177"],["178"],"'alpha' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"kind":"183","justification":"184"},"Update the dependencies array to be: [currentUser, getFavorites]",{"range":"185","text":"186"},"Update the dependencies array to be: [currentUser, getCurrentUser, userData, username]",{"range":"187","text":"188"},"directive","",[1112,1114],"[currentUser, getFavorites]",[1010,1039],"[currentUser, getCurrentUser, userData, username]"]